<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net5.0-windows</TargetFramework>
    <UseWindowsForms>true</UseWindowsForms>
	<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
	<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
	<IsPackable>false</IsPackable>
	<SpaRoot>../reactclient</SpaRoot>
	<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
	<AssemblyName>MSFS Touch Panel Server</AssemblyName>
    <RootNamespace>MSFSTouchPanel.TouchPanelHost</RootNamespace>
	<ApplicationIcon>logo192.ico</ApplicationIcon>
    <Platforms>AnyCPU;x64</Platforms>
    <Version>0.2.0.0</Version>
    <StartupObject />
	<DebugType Condition=" '$(Configuration)' == 'Release' ">None</DebugType>
	<Authors>Stanley Kwok</Authors>
	<Company />
	<Copyright>Stanley Kwok 2021</Copyright>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="DarkUI" Version="2.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.8" />
    <PackageReference Include="Microsoft.Web.WebView2" Version="1.0.1018-prerelease" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\fsuipcagent\fsuipcagent.csproj" />
    <ProjectReference Include="..\simconnectagent\simconnectagent.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="cert.pem">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Compile Remove="reactclient\**" />
		<Content Remove="$(SpaRoot)**" />
		<Content Remove="reactclient\**" />
		<EmbeddedResource Remove="reactclient\**" />
		<None Remove="$(SpaRoot)**" />
		<None Remove="reactclient\**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
		<None Remove="../reactclient%2a%2a" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="UI\WinPanelForm.cs">
	    <SubType>Form</SubType>
	  </Compile>
	  <Compile Update="UI\ButtonPanelForm.cs">
	    <SubType>Form</SubType>
	  </Compile>
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />-->
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!--As part of publishing, ensure the JS resources are freshly built in production mode-->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

		<!--Include the newly-built files in the publish output  -->
		<!-- ******** This doesn't work when react app path is outside the apihost .NET application ********* -->
		<Message Text="@(ResolvedFileToPublish)" Importance="high" />

		<!-- Manually copy react build assets into obj folder -->
		<Message Text="Manually copy react build assets into obj folder ........" Importance="high" />
		<ItemGroup>
			<DataFiles Include="$(SpaRoot)\build\**"></DataFiles>
		</ItemGroup>
		<Copy SourceFiles="@(DataFiles)" DestinationFiles="@(DataFiles->'$(PublishDir)reactclient\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Message Text="@(DataFiles->'$(PublishDir)reactclient\%(RecursiveDir)%(Filename)%(Extension)')" Importance="high" />
		
		<!-- Copy all plugin-extensions items -->
		<ItemGroup>
			<PluginFiles Include="$(SolutionDir)\plugin-extension\**"></PluginFiles>
		</ItemGroup>
		<Copy SourceFiles="@(PluginFiles)" DestinationFolder="$(PublishDir)plugin-extension\%(RecursiveDir)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Retries="3" RetryDelayMilliseconds="300" />
	</Target>
</Project>